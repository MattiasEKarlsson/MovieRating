@page "/movies/{id}"

@inject IMovieService MovieService


@if (movie == null)
{
    <p>Loading...</p>
}
else
{
    <div>
        <h3>@movie.Title</h3>
        <div>
            <img src="@movie.Image" width="300" />
        </div>
        <p>@movie.Description</p>
    </div>
    if (authenticationState.User.Identity.IsAuthenticated)
    {
        <div>
            <a type="button" class="btn btn-primary btnstyle" href="/write-a-review/@movie.Id">Write a review...</a>
        </div>
        @if (authenticationState.User.IsInRole(SD.Role_Admin))
        {
            <EditDelete id="@id" />
        }
    }
    <ReviewList id="@movie.Id" />

}

@code {
    [Parameter]
    public string id { get; set; }

    [CascadingParameter]
    public Task<AuthenticationState> AuthenticationState { get; set; }
    AuthenticationState authenticationState;
    private Movie movie;

    protected override async Task OnInitializedAsync()
    {
        movie = await MovieService.GetMovieById(Int32.Parse(id));
        authenticationState = await AuthenticationState;
    }
}
