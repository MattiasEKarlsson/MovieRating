@page "/addmovie"
@using MovieRating.Services
@using SharedLibrary
@inject IMovieService MovieService
@inject NavigationManager NavManager;

<PageTitle>Add Movie</PageTitle>
<h3>Add a Movie</h3>
<EditForm Model="@newMovie" OnValidSubmit="AddNewMovie">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label for="title">Title</label>
        <InputText id="title" @bind-Value="newMovie.Title" class="form-control" />
        <ValidationMessage For="@(() => newMovie.Title)" />
    </div>
    <div class="form-group">
        <label for="url">Url</label>
        <InputText id="url" @bind-Value="newMovie.Url" class="form-control" />
        <ValidationMessage For="@(() => newMovie.Url)" />
    </div>
    <div class="form-control-file">
        <label for="image">Image</label>
        <InputFile OnChange="OnFileChange" />
    </div>
    <div class="form-group">
        <label for="description">Description</label>
        <InputText id="description" @bind-Value="newMovie.Description" class="form-control" />
    </div>
    <div class="form-group">
        <label for="director">Director</label>
        <InputText id="director" @bind-Value="newMovie.Director" class="form-control" />
    </div>
    
    <div class="form-group">
        <label for="date">Date</label>
        <InputDate id="date" @bind-Value="newMovie.DateCreate" class="form-control" />
    </div>
    
    <button type="submit" class="btn btn-primary">Create</button>
    <ValidationSummary />
</EditForm>

@code
{

    public Movie newMovie = new Movie();
    async Task AddNewMovie()
    {
        var result = await MovieService.CreateMovie(newMovie);
        NavManager.NavigateTo("/");
    }
    async Task OnFileChange(InputFileChangeEventArgs e)
    {
        var format = "image/png";
        var resizedImage = await e.File.RequestImageFileAsync(format, 1060, 1060);
        var buffer = new byte[resizedImage.Size];
        await resizedImage.OpenReadStream().ReadAsync(buffer);
        var imageData = $"data:{format};base64,{Convert.ToBase64String(buffer)}";
        newMovie.Image = imageData;
    }

}
